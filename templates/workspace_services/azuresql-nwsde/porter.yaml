---
schemaVersion: 1.0.0
name: tre-workspace-service-azuresql-nwsde
version: 1.0.0
description: "An Azure SQL workspace service [nw]"
registry: azuretre
dockerfile: Dockerfile.tmpl

credentials:
  # Credentials for interacting with the AAD Auth tenant
  - name: auth_client_id
    env: AUTH_CLIENT_ID
  - name: auth_client_secret
    env: AUTH_CLIENT_SECRET
  - name: auth_tenant_id
    env: AUTH_TENANT_ID
  # Credentials for interacting with Azure
  - name: azure_tenant_id
    env: ARM_TENANT_ID
  - name: azure_subscription_id
    env: ARM_SUBSCRIPTION_ID
  - name: azure_client_id
    env: ARM_CLIENT_ID
  - name: azure_client_secret
    env: ARM_CLIENT_SECRET
parameters:
  - name: workspace_id
    type: string
  - name: tre_id
    type: string

  # the following are added automatically by the resource processor
  - name: id
    type: string
    description: "Resource ID"
    env: id
  - name: tfstate_resource_group_name
    type: string
    description: "Resource group containing the Terraform state storage account"
  - name: tfstate_storage_account_name
    type: string
    description: "The name of the Terraform state storage account"
  - name: tfstate_container_name
    env: tfstate_container_name
    type: string
    default: "tfstate"
    description: "The name of the Terraform state storage container"
  - name: azure_environment
    type: string
    default: "AzureCloud"
    description: "Used by Azure CLI to set the Azure environment"
  - name: arm_use_msi
    env: ARM_USE_MSI
    type: boolean
    default: false
  - name: arm_environment
    env: ARM_ENVIRONMENT
    type: string
    default: "public"
  - name: sql_sku
    type: string
    default: "S2 | 50 DTUs"
  - name: storage_gb
    type: integer
    default: 5
  - name: azuresql_identity
    type: string
    default: ""

mixins:
  - exec
  - terraform:
      clientVersion: 1.9.8
  - az:
      clientVersion: 2.67.0

outputs:
  - name: azuresql_fqdn
    type: string
    applyTo:
      - install
      - upgrade
  - name: workspace_address_spaces
    type: string
    applyTo:
      - install
      - upgrade

install:
  - terraform:
      description: "Install Azure SQL workspace service"
      vars:
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        sql_sku: ${ bundle.parameters.sql_sku }
        storage_gb: ${ bundle.parameters.storage_gb }
        arm_environment: ${ bundle.parameters.arm_environment }
        azuresql_identity: ${ bundle.parameters.azuresql_identity }
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-workspace-service-azuresql-${ bundle.parameters.id }
      outputs:
        - name: azuresql_fqdn
        - name: workspace_address_spaces
        - name: rg_name
        - name: server_name
        - name: server_ip
        - name: database_name
        - name: entra_sql_users_group
        - name: entra_sql_admins_group
        - name: cloud_admin_user
  - exec:
      description: "Configure user in Azure SQL"
      command: bash
      arguments:
        - ./scripts/azuresql-add-user.sh
      envs:
        AZ_ENVIRONMENT: ${ bundle.parameters.azure_environment }
        AZ_SP_CLIENT_ID: ${ bundle.credentials.auth_client_id }
        AZ_SP_CLIENT_SECRET: ${ bundle.credentials.auth_client_secret }
        AZ_SP_TENANT_ID: ${ bundle.credentials.auth_tenant_id }
        AZ_MI_CLIENT_ID: ${ bundle.credentials.azure_client_id }
        RG_NAME: ${ bundle.outputs.rg_name }
        SERVER_NAME: ${ bundle.outputs.server_name }
        SERVER_FQDN: ${ bundle.outputs.azuresql_fqdn }
        SERVER_IP: ${ bundle.outputs.server_ip }
        DATABASE_NAME: ${ bundle.outputs.database_name }
        ENTRA_SQL_USERS_GROUP: ${ bundle.outputs.entra_sql_users_group }
        ENTRA_SQL_ADMINS_GROUP: ${ bundle.outputs.entra_sql_admins_group }
        CLOUD_ADMIN_USER: ${ bundle.outputs.cloud_admin_user }

upgrade:
  - terraform:
      description: "Upgrade Azure SQL workspace service"
      vars:
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        sql_sku: ${ bundle.parameters.sql_sku }
        storage_gb: ${ bundle.parameters.storage_gb }
        arm_environment: ${ bundle.parameters.arm_environment }
        azuresql_identity: ${ bundle.parameters.azuresql_identity }
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-workspace-service-azuresql-${ bundle.parameters.id }
      outputs:
        - name: azuresql_fqdn
        - name: workspace_address_spaces
        - name: rg_name
        - name: server_name
        - name: server_ip
        - name: database_name
        - name: entra_sql_users_group
        - name: entra_sql_admins_group
        - name: cloud_admin_user
  - exec:
      description: "Configure user in Azure SQL"
      command: bash
      arguments:
        - ./scripts/azuresql-add-user.sh
      envs:
        AZ_ENVIRONMENT: ${ bundle.parameters.azure_environment }
        AZ_SP_CLIENT_ID: ${ bundle.credentials.auth_client_id }
        AZ_SP_CLIENT_SECRET: ${ bundle.credentials.auth_client_secret }
        AZ_SP_TENANT_ID: ${ bundle.credentials.auth_tenant_id }
        AZ_MI_CLIENT_ID: ${ bundle.credentials.azure_client_id }
        RG_NAME: ${ bundle.outputs.rg_name }
        SERVER_NAME: ${ bundle.outputs.server_name }
        SERVER_FQDN: ${ bundle.outputs.azuresql_fqdn }
        SERVER_IP: ${ bundle.outputs.server_ip }
        DATABASE_NAME: ${ bundle.outputs.database_name }
        ENTRA_SQL_USERS_GROUP: ${ bundle.outputs.entra_sql_users_group }
        ENTRA_SQL_ADMINS_GROUP: ${ bundle.outputs.entra_sql_admins_group }
        CLOUD_ADMIN_USER: ${ bundle.outputs.cloud_admin_user }


uninstall:
  - terraform:
      description: "Uninstall Azure SQL workspace service"
      vars:
        auth_client_id: ${ bundle.credentials.auth_client_id }
        auth_client_secret: ${ bundle.credentials.auth_client_secret }
        auth_tenant_id: ${ bundle.credentials.auth_tenant_id }
        workspace_id: ${ bundle.parameters.workspace_id }
        tre_id: ${ bundle.parameters.tre_id }
        tre_resource_id: ${ bundle.parameters.id }
        sql_sku: ${ bundle.parameters.sql_sku }
        storage_gb: ${ bundle.parameters.storage_gb }
        arm_environment: ${ bundle.parameters.arm_environment }
        azuresql_identity: ${ bundle.parameters.azuresql_identity }
      backendConfig:
        use_azuread_auth: "true"
        use_oidc: "true"
        resource_group_name: ${ bundle.parameters.tfstate_resource_group_name }
        storage_account_name: ${ bundle.parameters.tfstate_storage_account_name }
        container_name: ${ bundle.parameters.tfstate_container_name }
        key: tre-workspace-service-azuresql-${ bundle.parameters.id }

